/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

// |------|------|------|------|------|------|                                                |------|------|------|------|------|------|
// | SW1  | SW2  | SW3  | SW4  | SW5  | SW6  |                                                | SW6  | SW5  | SW4  | SW3  | SW2  | SW1  |
// |------|------|------|------|------|------|                                                |------|------|------|------|------|------|
// | SW7  | SW8  | SW9  | SW10 | SW11 | SW12 |                                                | SW12 | SW11 | SW10 | SW9  | SW8  | SW7  |
// |------|------|------|------|------|------|                                                |------|------|------|------|------|------|
// | SW13 | SW14 | SW15 | SW16 | SW17 | SW18 |                                                | SW18 | SW17 | SW16 | SW15 | SW14 | SW13 |
// |------|------|------|------|------|------|------|------|                    |------|------|------|------|------|------|------|------|
// | SW19 | SW20 | SW21 | SW22 | SW23 | SW24 | SW25 | SW26 |                    | SW26 | SW25 | SW24 | SW23 | SW22 | SW21 | SW20 | SW19 |
// |------|------|------|------|------|------|------|------|                    |------|------|------|------|------|------|------|------|
// |      | SW27 | SW28 | SW29 | SW30 | SW31 | SW32 | SW33 |                    | SW33 | SW32 | SW31 | SW30 | SW29 | SW28 | SW27 |      |
// |------|------|------|------|------|      |      |------|                    |------|      |      |------|------|------|------|------|
//                                    |      |      | SW34 |                    | SW34 |      |      |
//                                    |------|------|------|                    |------|------|------|

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // | EQLS  |  1   |  2   |  3   |  4   |  5   |                                                   |  6   |  7   |  8   |  9   |  0   | MINS |
            // | TAB   |  "   |  <   |  >   |  P   |  Y   |                                                   |  F   |  G   |  C   |  R   |  L   | SLSH |
            // | ESC   |  A   |  O   |  E   |  U   |  I   |                                                   |  D   |  H   |  T   |  N   |  S   | \    |
            // | LSHFT |  ;   |  Q   |  J   |  K   |  X   |      | ALT  | CTRL |         | WIN  | CTL  |      |  B   |  M   |  W   |  V   |  Z   | SHFT |
            //         | GRV  | BSLS | LEFT | RGHT |      | BSPC |  FN  | HOME |         | PGUP | ENT  | SPC  |      |  UP  |  DN  |  [   |  ]   |
            //                                                          | END  |         | PGDN |

            bindings = <
&kp EQUAL   &kp N1     &kp N2      &kp N3    &kp N4     &kp N5                                                                             &kp N6  &kp N7  &kp N8     &kp N9      &kp N0     &kp MINUS
&kp TAB     &kp SQT    &kp COMMA   &kp DOT   &kp P      &kp Y                                                                              &kp F   &kp G   &kp C      &kp R       &kp L      &kp SLASH
&kp ESC     &kp A      &kp O       &kp E     &kp U      &kp I                                                                              &kp D   &kp H   &kp T      &kp N       &kp S      &kp BSLH
&kp LSHIFT  &kp SEMI   &kp Q       &kp J     &kp K      &kp X             &kp LALT   &kp LCTRL       &kp LGUI       &kp RCTRL              &kp B   &kp M   &kp W      &kp V       &kp Z      &kp RSHIFT
            &kp GRAVE  &kp BSLH    &kp LEFT  &kp RIGHT          &kp BSPC  &mo 1      &kp HOME        &kp PG_UP      &kp ENTER  &kp SPACE           &kp UP  &kp DOWN   &kp LBKT    &kp RBKT
                                                                                     &kp END         &kp PG_DN
            >;
        };

        fn_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |BT_CLR|  F1  |  F2  |  F3  |  F4   |  F5  |                                                   |      | NLCK |  =   |  /   |  *   |      |
            // |      |  F6  |  F7  |  F8  |  F9   |  F10 |                                                   |  (   |  7   |  8   |  9   |  -   |      |
            // |      |  F11 |  F12 | INS  | PRTSC |      |                                                   |  )   |  4   |  5   |  6   |  +   |      |
            // | C-z  | C-x  | C-c  | C-v  |       |      |      |      |      |         |      |      |      |      |  1   |  2   |  3   | ENT  |      |
            //        |      | INS  |      |       |      |      |  FN  |      |         |      |      |      |      |  0   |  .   |  ,   | ENT  |
            //                                                          |      |         |      |

            bindings = <
&kp ESC       &kp F1     &kp F2    &kp F3     &kp F4      &kp F5                                                          &trans       &KP_NUM       &kp KP_EQUAL  &kp KP_SLASH   &kp KP_ASTERISK   &kp F11
&trans        &kp F6     &kp F7    &kp F8     &kp F9      &kp F10                                                         &kp KP_LPAR  &kp KP_N7     &kp KP_N8     &kp KP_N9      &kp KP_MINUS      &kp F12
&kp CAPSLOCK  &kp F11    &kp F12   &kp INS    &kp PSCRN   &trans                                                          &kp KP_RPAR  &kp KP_N4     &kp KP_N5     &kp KP_N6      &kp KP_PLUS       &trans
&mo 2         &kp K_UNDO &kp K_CUT &kp K_COPY &kp K_PASTE &trans            &trans &trans    &trans  &trans               &trans       &kp KP_N1     &kp KP_N2     &kp KP_N3      &kp KP_ENTER      &trans
              &trans     &trans    &trans     &trans                &trans  &trans &trans    &trans  &trans  &trans                    &kp KP_N0     &kp KP_DOT    &kp KP_COMMA   &kp KP_ENTER
                                                                                   &trans    &trans
            >;
        };
    };
};
